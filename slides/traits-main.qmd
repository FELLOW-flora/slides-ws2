## Species list

::::{ .columns}
:::{ .column width="50%" align="left"}
![Files in fellow-traits/data/raw-data/species-list](img/species-list.png){height=500}
:::
:::{ .column width="50%" .fragment}
<br><br>

- Merge files (in [analyses/01_get_specieslist.R](https://github.com/FELLOW-flora/fellow-traits/blob/main/analyses/01_get_specieslist.R))   
- Harmonize the spellings with function clean_species_list():   
  - remove punctuations: ? . , ()  
  - remove sp, spp, cf, complex, ...  
  - remove author name and years when included  
  - make sure only first genus letter is uppercase  
  - remove "Arbre", "Espece", "Inconue", "Repousse", ...
  - remove taxa that are coarser than family: *Dicotyledonae*, *Bryophyta*


> Number of unique taxa: 1884  
:::
::::


## Species list

::::{ .columns}

:::{ .column width="50%"  align="left"}

**Taxonomic backbone**

- [TaxRef v18](https://inpn.mnhn.fr/telechargement/referentielEspece/taxref/18.0/menu) 
- if not available, [GBIF](https://www.gbif.org/dataset/d7dddbf4-2cf0-4f39-9b2a-bb099caae36c) (based on Catalogue of Life) 

> Taxa with no exact match in Taxref: 97  
> Taxa not found in Taxref with fuzzy matching: 43  
> Taxa not found in GBIF: 1 (*Ornithogalum muscari*)  
> Number of accepted taxa: 1706

```{r}
#| echo: false
url <- "https://github.com/FELLOW-flora/fellow-traits/raw/refs/heads/main/"
short <- "data/derived-data/species_list_taxo.csv"
df <- read.csv(paste0(url, short))

# table(df$taxref_status)
# remove missing accepted_taxa
df <- df[!is.na(df$accepted_taxa), ]
short_df <- df[, c("accepted_taxa", "full_name", "accepted_rank")]
short_df <- short_df[!duplicated(short_df), ]
short_df <- short_df[complete.cases(short_df), ]
short_df <- short_df[order(short_df$accepted_taxa), ]

table(short_df$accepted_rank)
```


**Synonyms**  

[43k known synonyms](https://github.com/FELLOW-flora/fellow-traits/raw/refs/heads/main/data/derived-data/species_known_synonyms.csv) were retrieve from   
original species list, TaxRef and GBIF.  
:::

:::{ .column width="50%" .fragment}

*specialist*: a taxa listed in only one database   
*generalist*: a taxa listed in 50% of the databases   

```{r speciesperdb}
#| echo: false
#| fig-height: 8

col_db <- grep("^in_", names(df))
db <- df[, col_db]

# merge per species (remove duplicates)
dbpersp <- rowsum(db, group = df$accepted_taxa)

# transform as binary
dbpersp[dbpersp > 1] <- 1

# count the number of database per species
nsp_db <- apply(dbpersp, 2, sum)
# count the number of species per database
ndb <- apply(dbpersp, 1, sum)

# divide between specialist species and generalist ones
sp_class <- cut(
  ndb,
  breaks = c(0, 1, 8, max(ndb)),
  labels = c("specialist", "other", "generalist")
)

table(sp_class)
sum_gen <- as.matrix(rowsum(dbpersp, sp_class))
colnames(sum_gen) <- gsub("^in_", "", colnames(sum_gen))

par(mar = c(4, 8, 1, 1), cex = 1.5)
barplot(
  sum_gen,
  horiz = TRUE,
  las = 1,
  xlab = "Number of species",
  col = RColorBrewer::brewer.pal(3, "Set3")
)
legend(
  "topright",
  fill = RColorBrewer::brewer.pal(3, "Set3"),
  legend = c("specialist", "other", "generalist")
)
```

:::
::::



## Trait databases

![Metadata in [fellow-traits/data/raw-data/traits/Metatraits.xlsx](https://github.com/FELLOW-flora/fellow-traits/raw/refs/heads/main/data/raw-data/traits/Metatraits.xlsx)](img/trait-db.png){height=500}


## Trait coverage per database

```{r nadb}
merge <- "data/derived-data/merged_traits.csv"
traits <- read.csv(paste0(url, merge))

real_traits <- !grepl("original", names(traits)) &
  names(traits) != "accepted_taxa"

# summary of NAs
num_na <- apply(is.na(traits), 2, sum)

db_na <- num_na[grep("original", names(num_na))]
names(db_na) <- gsub("original_taxa_", "", names(db_na))

trait_na <- apply(is.na(traits[, real_traits]), 2, sum)

# species with lowest completeness
sp_na <- apply(is.na(traits[, real_traits]), 1, sum)

# database with best match
par(mar = c(4, 8, 1, 1))
barplot(
  sort(db_na),
  horiz = TRUE,
  las = 1,
  xlab = "Number of missing species"
)
```

## Trait coverage per database

```{r natraits}
# summary of NAs
trait_db <- strsplit(names(trait_na), "_") |>
  sapply(function(x) x[[length(x)]]) |>
  factor(
    levels = names(db_na)[order(db_na)],
    ordered = TRUE
  )
# database with best match
par(mar = c(4, 8, 1, 1))
boxplot(
  trait_na ~ trait_db,
  horizontal = TRUE,
  las = 1,
  xlab = "Number of missing traits values",
  ylab = ""
)
```

## Trait coverage per database

```{r natraitsrect}
# add rectangle
par(mar = c(4, 8, 1, 1))
boxplot(
  trait_na ~ trait_db,
  horizontal = TRUE,
  las = 1,
  xlab = "Number of missing traits values",
  ylab = ""
)
rect(18.3, 1.5, 500, 4.5, lwd = 5, border = "darkgreen")
```

## Trait coverage per taxonomic rank

::::{ .columns}

:::{ .column width="75%"  align="left"}

```{r narank}
# barplot(t(table(sp_na, taxolist$gbif_rank)), border = NA)
bks <- seq(10, 120, by = 10)
df <- data.frame(
  "cat" = cut(sp_na, breaks = bks, include.lowest = TRUE),
  "rank" = short_df$accepted_rank
)
tdf <- table(df$rank, df$cat)
par(mar = c(4, 4, 1, 1))
barx <- barplot(
  tdf,
  col = hcl.colors(5, "viridis"),
  names = rep("", 11),
  xlab = "Number of missing traits",
  ylab = "Number of species"
)
barax <- c(barx - mean(diff(barx) / 2), max(barx) + mean(diff(barx) / 2))
axis(1, at = barax, bks)
legend("topright", legend = row.names(tdf), fill = hcl.colors(5, "viridis"))
```

:::

:::{ .column width="25%" .fragment}
<br><br><br>
Taxa with no trait information.

```{r nodata}
nodata <- traits$accepted_taxa[sp_na >= max(sp_na)]
# knitr::kable(
#   matrix(nodata, ncol = 2, byrow = TRUE),
#   col.names = NULL,
#   format = "simple"
# )
cat(paste(nodata, collapse = "\n"))
```

:::
::::

## Trait coverage per species frequency

```{r nafreq}
par(mar = c(4, 4, 1, 1))
plot(
  jitter(ndb),
  sp_na,
  xlab = "Number of datasets (jittered)",
  ylab = "Number of missing traits"
)
# add cosmetics
abline(v = c(1.5, 8.5), lwd = 2)
segments(
  c(par()$usr[1], 1.5, 8.5),
  par()$usr[3],
  c(1.5, 8.5, par()$usr[2]),
  par()$usr[3],
  col = RColorBrewer::brewer.pal(3, "Set3"),
  lwd = 5,
  xpd = NA
)
mtext(
  at = c(0.5, 13),
  side = 1,
  line = 0.5,
  text = c("Specialists", "Generalists"),
  xpd = NA
)
```


## Trait completness


```{r completetab}
trname <- names(traits)[real_traits]

trone <- sapply(strsplit(trname, "_"), function(x) x[[1]])
trone <- gsub(".mm2.mg.1", "", trone) # SLA must be checked in metatraits
trone <- gsub("Fruit.colour", "Fruit.color", trone) # to be replaced in metatraits
trone[grepl("Flower.UV.reflectance", trone)] <- "Flower.UV.reflectance"

# calculate the completeness of each traits
trna <- apply(!is.na(traits[, real_traits]), 1, as.numeric)
summaryna <- apply(rowsum(trna, trone) > 0, 1, sum)
# to be removed: variables with no information
summaryna <- summaryna[summaryna > 0]

completness <- data.frame(
  "trait" = names(summaryna),
  "database" = as.numeric(table(trone[trone %in% names(summaryna)])),
  "N_taxa" = as.numeric(summaryna),
  "completness" = round(as.numeric(summaryna) / nrow(traits) * 100)
)

# DT::datatable(completness)
DT::datatable(
  completness[order(completness$N_taxa, decreasing = TRUE), ],
  rownames = FALSE,
  colnames = c("Trait", "N database", "N taxa", "Completness (%)")
)
```


## Comparison - Plant height (m)

```{r height}
# to get function panel.cor()
short <- "R/utils.R"
source(paste0(url, short))

traits$Plant.height_cm_FlorealData <- ifelse(
  traits$Plant.height_cm_FlorealData >= 100,
  NA,
  traits$Plant.height_cm_FlorealData
)

height <- data.frame(
  "spvignes" = traits$Plant.height_cm_SPVignes / 100,
  "FlorealData" = traits$Plant.height_cm_FlorealData / 100,
  "Lososova" = traits$Plant.height_m_Lososova2023,
  "BIEN" = traits$Plant.height_m_BIEN,
  "GIFT" = traits$Plant.height_mean_m_GIFT,
  "Ecoflora" = traits$Plant.height_m_Ecoflora
)

pairs(height, lower.panel = panel.smooth, upper.panel = panel.cor)

height$filled <- apply(height, 1, mean, na.rm = TRUE)
print(apply(is.na(height), 2, sum))
```

## Comparison - SLA

```{r sla}
sla <- data.frame(
  "Hodgson" = traits$SLA.mm2.mg.1_Hodgson2023,
  "GIFT" = traits$SLA_cm2.g.1_GIFT / 10,
  "BIEN" = traits$SLA_m2.kg.1_BIEN
)

pairs(sla, lower.panel = panel.smooth, upper.panel = panel.cor)

sla$filled <- apply(sla, 1, mean, na.rm = TRUE)
print(apply(is.na(sla), 2, sum))
```

## Comparison - Seed mass (mg)

```{r seed}
seed <- data.frame(
  "Lososova" = traits$Seed.mass_mg_Lososova2023,
  "BIEN" = traits$Seed.mass_mg_BIEN,
  "GIFT" = traits$Seed.mass_g_GIFT * 1000,
  "Ecoflora" = traits$Seed.mass_mg_Ecoflora,
  "Biolflor" = traits$Seed.mass_mg_Biolflor
)

pairs(seed, lower.panel = panel.smooth, upper.panel = panel.cor)

seed$filled <- apply(seed, 1, mean, na.rm = TRUE)
print(apply(is.na(seed), 2, sum))
```


## Comparison - Life form

```{r lifeform}
life_comp <- as.data.frame(table(
  traits$Lifecycle_Hodgson2023,
  traits$Lifecycle_GIFT
))
names(life_comp) <- c("Hodgson", "GIFT", "N")
life_comp <- life_comp[life_comp$N > 0, ]
DT::datatable(
  life_comp[order(life_comp$N, decreasing = TRUE), ],
  rownames = FALSE
)
```




## Way forward - open questions

<br>

**Missing trait information?**   

- which traits are missing? where to find them?
- relevant trait database missing?

. . .

**How to get clean and complete trait database?**  

- do we need information for all species? can we discard the rare taxa / non-weed taxa?
- how to combine trait information from multiple sources? biases?
- can we measure missing trait? can we guesstimate some of them?
- should we do trait imputation based on other traits or taxonomy?
- most categorical traits should be cleaned (misspellings, irrelevant categories, ...)


. . .

**What's next?**  

- a first stepping stone for multiple sub-projects
- in itself, is it a publishable output?
- how to continue? who takes the lead from now?

